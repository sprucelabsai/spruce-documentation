@use "sass:meta"; // 

@use "values";
@use "fonts";
@use "svg-icons";
@use "base-element-styles";
@use "code-theme";
@use "navigation";
@use "header";
@use "footer";
@use "widgets";

@use "page-specific/default-page-type";
@use "page-specific/home";
@use "page-specific/search";
@use "page-specific/install";
@use "markdown-docs-styles";

// @import 'debug';

* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  scroll-behavior: smooth;
}

body {
  display: flex;
  flex-direction: column;
}

.grid-buttons {
  display: flex;
  flex-wrap: wrap;

  .btn {
    @include base-element-styles.btn-base(white, black);
    margin: 5px;
  }

  img {
    margin: 5px;
  }
}

.button-container {
  display: flex;
  justify-content: center;
  margin-top: 20px; // Adjust as needed
}

.btn {
  @include base-element-styles.btn-base(white, black);
  padding: 10px 20px;
  background-color: #000000;
  color: white;
  text-decoration: none;
  border-radius: 5px;
}

details {
  margin-bottom: 10px;
  margin-left: 20px;

  summary {
    margin-left: -20px;
    cursor: pointer;
  }

  table {
    margin-top: 20px;
  }

}

h1 {
  border-bottom: 5px solid values.$cl-gray;
  padding-bottom: 20px;
  line-height: 1.2em;
}

h3 {
  border-bottom: 1px solid #d0d0d7;
  padding-bottom: 5px;
  padding-top: 3px;
  border-left: 5px solid #d0d0d7;
  padding-left: 10px;
  margin-top: 50px;

  code {
    color: black;
    font-weight: 500;
    font-size: inherit;
    font-family: inherit;
  }
}

h2 {
  line-height: 1.2em;
}

.main-area > h2 {
  background: rgba(values.$cl-gray, 30%); 
  padding: 10px;
  border-radius: 5px;
  margin-left: -10px;
}

blockquote {
  background: rgba(values.$cl-gray, 10%);
  border-left: 10px solid code-theme.$monokai-fg;
  margin: 1.5em 10px;
  padding: 1px 10px .1em 20px;
}

h1, h2, h3, h4, h5, h6 {
  a {
    text-decoration: none;
  }
}

.main-area.concepts {

  h1 {
    counter-reset: h2;
  }
  h2 {
    counter-reset: h3;
  }
  h2::before {
    counter-increment: h2;
    content: counter(h2) ". ";
  }
  h3::before {
    counter-increment: h3;
    content: counter(h2) "." counter(h3) ". ";
  }
}